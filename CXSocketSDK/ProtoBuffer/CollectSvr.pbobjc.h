// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CollectSvr.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class CoordinateRequest;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Client

/** 各端枚举 */
typedef GPB_ENUM(Client) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Client_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 手机 */
  Client_Phone = 0,

  /** 车机 */
  Client_Car = 1,
};

GPBEnumDescriptor *Client_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Client_IsValidValue(int32_t value);

#pragma mark - Enum LoginErrorCode

typedef GPB_ENUM(LoginErrorCode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  LoginErrorCode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 登录成功 */
  LoginErrorCode_Success = 0,

  /** 登录失败，关闭连接 */
  LoginErrorCode_ErrorClose = 1,

  /** 登录失败，重试 */
  LoginErrorCode_ErrorRetry = 2,
};

GPBEnumDescriptor *LoginErrorCode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL LoginErrorCode_IsValidValue(int32_t value);

#pragma mark - Enum CoordinateType

typedef GPB_ENUM(CoordinateType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CoordinateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 火星经纬度，国内GPS默认取的是火星坐标系 */
  CoordinateType_Gcj = 0,

  /** 百度坐标系 */
  CoordinateType_BaiduCoordinate = 1,

  /** 腾讯和高德和国测局坐标系 */
  CoordinateType_SosoGcjCoordinate = 2,

  /** 地球经纬度 */
  CoordinateType_Wgs84 = 3,
};

GPBEnumDescriptor *CoordinateType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CoordinateType_IsValidValue(int32_t value);

#pragma mark - Enum MessageType

typedef GPB_ENUM(MessageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MessageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MessageType_Ping = 0,
  MessageType_Pong = 1,
  MessageType_LoginRequest = 2,
  MessageType_LoginResponse = 3,
  MessageType_PushMessageResponse = 4,
  MessageType_GatewayPush = 5,

  /** 网关间消息 */
  MessageType_Ok = 6,

  /** 客户端回执 */
  MessageType_Ack = 23,

  /** 服务器登录消息 */
  MessageType_ServerLoginRequest = 7,

  /** 服务器登录回执 */
  MessageType_SeverLoginResponse = 8,
  MessageType_ServerMessage = 9,

  /** C端上传坐标消息 */
  MessageType_CoordinatePull = 10,

  /** 他人上线，踢出消息 */
  MessageType_Closechannel = 12,

  /** 用户信息消息 */
  MessageType_Userinfo = 13,

  /** 用户消息的返回 */
  MessageType_Userinforesponse = 14,

  /** push消息回执 */
  MessageType_PushMessageRequest = 15,

  /** 表情发送给用户（端-->服务端） */
  MessageType_UpstreamMessage = 16,

  /** 客户端消息 ，新版本统一走这个 */
  MessageType_ClientMessage = 17,
};

GPBEnumDescriptor *MessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MessageType_IsValidValue(int32_t value);

#pragma mark - Enum CloseChannelReason

/**
 * *
 *   服务端关闭Channel的原因
 **/
typedef GPB_ENUM(CloseChannelReason) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CloseChannelReason_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CloseChannelReason_Wrongtoken = 0,
  CloseChannelReason_Otherlogin = 1,
};

GPBEnumDescriptor *CloseChannelReason_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CloseChannelReason_IsValidValue(int32_t value);

#pragma mark - Enum OS

/** 平台类型 */
typedef GPB_ENUM(OS) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  OS_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  OS_Android = 0,
  OS_Ios = 1,
};

GPBEnumDescriptor *OS_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL OS_IsValidValue(int32_t value);

#pragma mark - CollectSvrRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CollectSvrRoot : GPBRootObject
@end

#pragma mark - CollectMessage

typedef GPB_ENUM(CollectMessage_FieldNumber) {
  CollectMessage_FieldNumber_MessageType = 1,
  CollectMessage_FieldNumber_Data_p = 2,
};

@interface CollectMessage : GPBMessage

@property(nonatomic, readwrite) MessageType messageType;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@end

/**
 * Fetches the raw value of a @c CollectMessage's @c messageType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CollectMessage_MessageType_RawValue(CollectMessage *message);
/**
 * Sets the raw value of an @c CollectMessage's @c messageType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCollectMessage_MessageType_RawValue(CollectMessage *message, int32_t value);

#pragma mark - ServerLoginRequest

typedef GPB_ENUM(ServerLoginRequest_FieldNumber) {
  ServerLoginRequest_FieldNumber_Key = 1,
};

/**
 * 客户端登录的秘钥
 **/
@interface ServerLoginRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@end

#pragma mark - ServerLoginRespone

typedef GPB_ENUM(ServerLoginRespone_FieldNumber) {
  ServerLoginRespone_FieldNumber_Key = 1,
  ServerLoginRespone_FieldNumber_ChannelId = 2,
  ServerLoginRespone_FieldNumber_Ip = 3,
};

/**
 * 将对应的ChannelId返回给服务
 **/
@interface ServerLoginRespone : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

/** 返回生成的channelId */
@property(nonatomic, readwrite, copy, null_resettable) NSString *channelId;

/** 当前connser机器的ip */
@property(nonatomic, readwrite, copy, null_resettable) NSString *ip;

@end

#pragma mark - ServerMessage

typedef GPB_ENUM(ServerMessage_FieldNumber) {
  ServerMessage_FieldNumber_Userid = 1,
  ServerMessage_FieldNumber_Content = 2,
  ServerMessage_FieldNumber_ServerId = 3,
  ServerMessage_FieldNumber_Seqid = 4,
  ServerMessage_FieldNumber_RetType = 5,
  ServerMessage_FieldNumber_Client = 6,
};

/**
 * 服务调用server发来要给端上下发的消息
 **/
@interface ServerMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userid;

/** 主要消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

/** 具体业务的id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverId;

@property(nonatomic, readwrite) int64_t seqid;

/** 是否要重试 */
@property(nonatomic, readwrite) BOOL retType;

/** 客户端 */
@property(nonatomic, readwrite) Client client;

@end

/**
 * Fetches the raw value of a @c ServerMessage's @c client property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ServerMessage_Client_RawValue(ServerMessage *message);
/**
 * Sets the raw value of an @c ServerMessage's @c client property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetServerMessage_Client_RawValue(ServerMessage *message, int32_t value);

#pragma mark - LoginRequest

typedef GPB_ENUM(LoginRequest_FieldNumber) {
  LoginRequest_FieldNumber_UserId = 1,
  LoginRequest_FieldNumber_Phone = 2,
  LoginRequest_FieldNumber_Token = 3,
  LoginRequest_FieldNumber_Version = 4,
  LoginRequest_FieldNumber_Sign = 5,
  LoginRequest_FieldNumber_Client = 6,
};

@interface LoginRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *phone;

/** 用户服务token */
@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** 签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *sign;

/** 区分是什么端 */
@property(nonatomic, readwrite) Client client;

@end

/**
 * Fetches the raw value of a @c LoginRequest's @c client property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LoginRequest_Client_RawValue(LoginRequest *message);
/**
 * Sets the raw value of an @c LoginRequest's @c client property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLoginRequest_Client_RawValue(LoginRequest *message, int32_t value);

#pragma mark - LoginResponse

typedef GPB_ENUM(LoginResponse_FieldNumber) {
  LoginResponse_FieldNumber_UserId = 1,
  LoginResponse_FieldNumber_Key = 2,
  LoginResponse_FieldNumber_ErrorCode = 3,
};

@interface LoginResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

/** 失败码 */
@property(nonatomic, readwrite) LoginErrorCode errorCode;

@end

/**
 * Fetches the raw value of a @c LoginResponse's @c errorCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t LoginResponse_ErrorCode_RawValue(LoginResponse *message);
/**
 * Sets the raw value of an @c LoginResponse's @c errorCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetLoginResponse_ErrorCode_RawValue(LoginResponse *message, int32_t value);

#pragma mark - PushMessageResponse

typedef GPB_ENUM(PushMessageResponse_FieldNumber) {
  PushMessageResponse_FieldNumber_Content = 1,
  PushMessageResponse_FieldNumber_Timestamp = 2,
  PushMessageResponse_FieldNumber_SeqId = 3,
  PushMessageResponse_FieldNumber_ServerId = 4,
  PushMessageResponse_FieldNumber_RetType = 5,
};

/**
 * *服务端下发消息
 **/
@interface PushMessageResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@property(nonatomic, readwrite) int64_t timestamp;

/** 消息的id ，回执时带回 */
@property(nonatomic, readwrite) int64_t seqId;

/** 回执时带回,具体的服务id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverId;

/** 是否要回执 true回执，false不带回执 */
@property(nonatomic, readwrite) BOOL retType;

@end

#pragma mark - PushMessageRequest

typedef GPB_ENUM(PushMessageRequest_FieldNumber) {
  PushMessageRequest_FieldNumber_SeqId = 1,
  PushMessageRequest_FieldNumber_ServerId = 2,
  PushMessageRequest_FieldNumber_Timestamp = 3,
};

/**
 * *
 * 客户端回执消息
 **/
@interface PushMessageRequest : GPBMessage

/** 消息唯一标识id */
@property(nonatomic, readwrite) int64_t seqId;

/** 服务端的id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverId;

@property(nonatomic, readwrite) int64_t timestamp;

@end

#pragma mark - PingMessage

typedef GPB_ENUM(PingMessage_FieldNumber) {
  PingMessage_FieldNumber_SeqId = 1,
};

@interface PingMessage : GPBMessage

@property(nonatomic, readwrite) int32_t seqId;

@end

#pragma mark - PongMessage

typedef GPB_ENUM(PongMessage_FieldNumber) {
  PongMessage_FieldNumber_SeqId = 1,
};

@interface PongMessage : GPBMessage

@property(nonatomic, readwrite) int32_t seqId;

@end

#pragma mark - UserInfoMessage

typedef GPB_ENUM(UserInfoMessage_FieldNumber) {
  UserInfoMessage_FieldNumber_UserId = 1,
  UserInfoMessage_FieldNumber_DeviceType = 2,
  UserInfoMessage_FieldNumber_Nettype = 3,
  UserInfoMessage_FieldNumber_Model = 4,
  UserInfoMessage_FieldNumber_Manufacturer = 5,
  UserInfoMessage_FieldNumber_Brand = 6,
  UserInfoMessage_FieldNumber_AppVersion = 7,
  UserInfoMessage_FieldNumber_Version = 8,
  UserInfoMessage_FieldNumber_Client = 9,
};

@interface UserInfoMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 系统类型 */
@property(nonatomic, readwrite) OS deviceType;

/** 网络类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nettype;

/** 型号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *model;

/** 生产厂商 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *manufacturer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *brand;

@property(nonatomic, readwrite, copy, null_resettable) NSString *appVersion;

/** 长链接version */
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** 客户端类型 */
@property(nonatomic, readwrite) Client client;

@end

/**
 * Fetches the raw value of a @c UserInfoMessage's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserInfoMessage_DeviceType_RawValue(UserInfoMessage *message);
/**
 * Sets the raw value of an @c UserInfoMessage's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserInfoMessage_DeviceType_RawValue(UserInfoMessage *message, int32_t value);

/**
 * Fetches the raw value of a @c UserInfoMessage's @c client property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserInfoMessage_Client_RawValue(UserInfoMessage *message);
/**
 * Sets the raw value of an @c UserInfoMessage's @c client property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserInfoMessage_Client_RawValue(UserInfoMessage *message, int32_t value);

#pragma mark - UserInfoResponse

typedef GPB_ENUM(UserInfoResponse_FieldNumber) {
  UserInfoResponse_FieldNumber_Result = 1,
};

@interface UserInfoResponse : GPBMessage

/** 成功返回true */
@property(nonatomic, readwrite) BOOL result;

@end

#pragma mark - CoordinateRequest

typedef GPB_ENUM(CoordinateRequest_FieldNumber) {
  CoordinateRequest_FieldNumber_Timestamp = 1,
  CoordinateRequest_FieldNumber_Lat = 2,
  CoordinateRequest_FieldNumber_Lon = 3,
  CoordinateRequest_FieldNumber_Type = 4,
  CoordinateRequest_FieldNumber_Provider = 5,
  CoordinateRequest_FieldNumber_Course = 6,
  CoordinateRequest_FieldNumber_Speed = 7,
};

/**
 * *
 * 坐标信息
 **/
@interface CoordinateRequest : GPBMessage

/** 必填，Unix时间戳，精确到毫秒，取GPS定位时间 */
@property(nonatomic, readwrite) int64_t timestamp;

/** 必填，纬度 */
@property(nonatomic, readwrite) double lat;

/** 必填，经度 */
@property(nonatomic, readwrite) double lon;

/** 必填 */
@property(nonatomic, readwrite) CoordinateType type;

/** 定位来源 */
@property(nonatomic, readwrite) int32_t provider;

/** 方向   0是正北 */
@property(nonatomic, readwrite) double course;

/** 速度 */
@property(nonatomic, readwrite) double speed;

@end

/**
 * Fetches the raw value of a @c CoordinateRequest's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CoordinateRequest_Type_RawValue(CoordinateRequest *message);
/**
 * Sets the raw value of an @c CoordinateRequest's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCoordinateRequest_Type_RawValue(CoordinateRequest *message, int32_t value);

#pragma mark - CoordinatePackageRequest

typedef GPB_ENUM(CoordinatePackageRequest_FieldNumber) {
  CoordinatePackageRequest_FieldNumber_Timestamp = 1,
  CoordinatePackageRequest_FieldNumber_UserId = 2,
  CoordinatePackageRequest_FieldNumber_CoordinateArray = 3,
  CoordinatePackageRequest_FieldNumber_CityId = 4,
  CoordinatePackageRequest_FieldNumber_AdCode = 5,
};

/**
 * *
 * 坐标包，N个坐标装到一个包里
 **/
@interface CoordinatePackageRequest : GPBMessage

/** Unix时间戳，精确到毫秒，坐标包上传本地时间，用于做坐标时间排序 */
@property(nonatomic, readwrite) uint64_t timestamp;

/** 用户id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 坐标点 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CoordinateRequest*> *coordinateArray;
/** The number of items in @c coordinateArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger coordinateArray_Count;

/** 取不到，设置为0即可 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *cityId;

/** 城市编码adcode */
@property(nonatomic, readwrite, copy, null_resettable) NSString *adCode;

@end

#pragma mark - CloseChannel

typedef GPB_ENUM(CloseChannel_FieldNumber) {
  CloseChannel_FieldNumber_ErrorMessage = 1,
  CloseChannel_FieldNumber_UserId = 2,
  CloseChannel_FieldNumber_TimeStamp = 3,
  CloseChannel_FieldNumber_Reason = 4,
};

/**
 * 关闭连接的返回消息
 **/
@interface CloseChannel : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite) uint64_t timeStamp;

@property(nonatomic, readwrite) CloseChannelReason reason;

@end

/**
 * Fetches the raw value of a @c CloseChannel's @c reason property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CloseChannel_Reason_RawValue(CloseChannel *message);
/**
 * Sets the raw value of an @c CloseChannel's @c reason property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCloseChannel_Reason_RawValue(CloseChannel *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
